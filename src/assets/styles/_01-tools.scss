

// TOOLS: Default mixin and functions

/*------------------------------------*\
    #MIXINS
\*------------------------------------*/
// Media Query

@mixin MQ($canvas) {
  @if $canvas == S {
   @media only screen and (min-width: $bp-small-2) { @content; }
  }
  @else if $canvas == M {
   @media only screen and (min-width: $bp-med) { @content; }
  }
    @else if $canvas == TABLET {
   @media only screen and (min-width: $bp-med-2) { @content; }
  }
  @else if $canvas == L {
   @media only screen and (min-width: $bp-large-2) { @content; }
  }
  @else if $canvas == XL {
   @media only screen and (min-width: $bp-xxxl) { @content; }
  }
  @else if $canvas == maxL {
   @media only screen and (max-width: $bp-large-2) { @content; }
  }
}

@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}

@mixin buttonReset {
  background: none;
  border: 0;
  color: inherit;
  -webkit-appearance: button; /* for input */
  -webkit-user-select: none; /* for button */
  -moz-user-select: none;
  -ms-user-select: none;
  cursor: pointer;
  outline: none;
  padding: 0;
}

/** CSS Transition Timing
 *  Usage: @include transitionTiming(none);
 */
@mixin transitionTiming($duration, $timing-function, $delay, $property) {
  transition-duration: $duration;
  transition-timing-function: $timing-function;
  transition-delay: $delay;
  transition-property: $property;
}

/** CSS Appearance
 *  Usage: @include appearance(none);
 */
@mixin appearance($appearance) {
  // appearance: $appearance;
  // -moz-appearance: $appearance;
  // -ms-appearance: $appearance;
  // -webkit-appearance: $appearance;
}
@mixin subHeader {
  font-family: $font-headings;
}

/** CSS Transition
 *  Usage: @include transition(width,0.3s,ease-out);
 */
@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}


/** Rem Unit font sizes with relative fallback http:/seesparkbox.com/foundry/scss_rem_mixin_now_with_a_better_fallback
 *  Usage: @include font-size(1, large);
 */
@mixin font-size( $decimal-size, $keyword: null ) {
  @if $keyword{ font-size: $keyword; }
  @else { font-size: $decimal-size * $base-font-multiplier * 16px;}
  font-size: $decimal-size * 1rem;
}

//BORDER BOTTOM

@mixin borderBottom() {
  border-bottom: 1px solid $color-gray-border;
}


/*------------------------------------*\
    #PORTED FROM BURBON
\*------------------------------------*/
@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}
@mixin placeholder {
  //@include _bourbon-deprecate-for-prefixing("placeholder");

  $placeholders: ":-webkit-input" ":-moz" "-moz" "-ms-input";
  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder {
      @content;
    }
  }
}

/*------------------------------------*\
    #CONTAINERS
\*------------------------------------*/
@mixin container-fullwidth {
  max-width: $max-width;
  padding: 0 $spacing-md;
  margin: 0 auto;
}

/*------------------------------------*\
    #FLEXBOX w/ BROWSER FALLBACKS
\*------------------------------------*/
@mixin flexbox {
  display:-webkit-box; // old
  display:-moz-box; // old
  display:-ms-flexbox; // ie
  display:-webkit-flex; // new
  display:flex; // new
}

@mixin flex-direction($direction) {
  @if $direction == column {
    -webkit-flex-direction:vertical;
    -moz-flex-direction:vertical;
    -ms-flex-direction:column;
    -webkit-flex-direction:column;
    flex-direction:column;
  }
  @else {
    -webkit-flex-direction:horizontal;
    -moz-flex-direction:horizontal;
    -ms-flex-direction:row;
    -webkit-flex-direction:row;
    flex-direction:row;
  }
}

@mixin flex-wrap($wrap) {
  @if $wrap == wrap {
    flex-wrap: wrap;
  }
  @else {
    flex-wrap: nowrap;
  }
}



@mixin justify-content($value) {

  @if $value == "start" {
    justify-content: flex-start;
  } @else if $value == "end" {
      justify-content: flex-end;
  } @else if $value == "between" {
      justify-content: space-between;
  } @else if $value == "around" {
      justify-content: space-around;
  } @else if $value == "center" {
      justify-content: center;
  }
}

@mixin align-items($value) {

  @if $value == "start" {
    align-items: flex-start;
  } @else if $value == "end" {
    align-items: flex-end;
  } @else if $value == "center" {
    align-items: center;
  } @else if $value == "baseline" {
    align-items: baseline;
  } @else if $value == "stretch" {
    align-items: stretch;
  }
}

/*------------------------------------*\
    #(X,Y) Absolute Centering
\*------------------------------------*/
@mixin absolute-centering {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-centering {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/*------------------------------------*\
    #LIST CLEAR
\*------------------------------------*/
@mixin clear-list-styling {
  margin: 0;
  padding: 0;
  list-style-type: none;
  li {
    margin: 0;
  }
}


/*------------------------------------*\
    #CLEAR STYLES (to make way for 3rd-party dynamic sub-element stylings)
    https://stackoverflow.com/questions/15901030/reset-remove-css-styles-for-element-only
\*------------------------------------*/
@mixin clear-all-styling {
    animation : none;
    animation-delay : 0;
    animation-direction : normal;
    animation-duration : 0;
    animation-fill-mode : none;
    animation-iteration-count : 1;
    animation-name : none;
    animation-play-state : running;
    animation-timing-function : ease;
    backface-visibility : visible;
    background : 0;
    background-attachment : scroll;
    background-clip : border-box;
    background-color : transparent;
    background-image : none;
    background-origin : padding-box;
    background-position : 0 0;
    background-position-x : 0;
    background-position-y : 0;
    background-repeat : repeat;
    background-size : auto auto;
    border : 0;
    border-style : none;
    border-width : medium;
    border-color : inherit;
    border-bottom : 0;
    border-bottom-color : inherit;
    border-bottom-left-radius : 0;
    border-bottom-right-radius : 0;
    border-bottom-style : none;
    border-bottom-width : medium;
    border-collapse : separate;
    border-image : none;
    border-left : 0;
    border-left-color : inherit;
    border-left-style : none;
    border-left-width : medium;
    border-radius : 0;
    border-right : 0;
    border-right-color : inherit;
    border-right-style : none;
    border-right-width : medium;
    border-spacing : 0;
    border-top : 0;
    border-top-color : inherit;
    border-top-left-radius : 0;
    border-top-right-radius : 0;
    border-top-style : none;
    border-top-width : medium;
    bottom : auto;
    box-shadow : none;
    box-sizing : content-box;
    caption-side : top;
    clear : none;
    clip : auto;
    color : inherit;
    columns : auto;
    column-count : auto;
    column-fill : balance;
    column-gap : normal;
    column-rule : medium none currentColor;
    column-rule-color : currentColor;
    column-rule-style : none;
    column-rule-width : none;
    column-span : 1;
    column-width : auto;
    content : normal;
    counter-increment : none;
    counter-reset : none;
    cursor : auto;
    direction : ltr;
    display : inline;
    empty-cells : show;
    float : none;
    font : normal;
    font-family : inherit;
    font-size : medium;
    font-style : normal;
    font-variant : normal;
    font-weight : normal;
    height : auto;
    hyphens : none;
    left : auto;
    letter-spacing : normal;
    line-height : normal;
    list-style : none;
    list-style-image : none;
    list-style-position : outside;
    list-style-type : disc;
    margin : 0;
    margin-bottom : 0;
    margin-left : 0;
    margin-right : 0;
    margin-top : 0;
    max-height : none;
    max-width : none;
    min-height : 0;
    min-width : 0;
    opacity : 1;
    orphans : 0;
    outline : 0;
    outline-color : invert;
    outline-style : none;
    outline-width : medium;
    overflow : visible;
    overflow-x : visible;
    overflow-y : visible;
    padding : 0;
    padding-bottom : 0;
    padding-left : 0;
    padding-right : 0;
    padding-top : 0;
    page-break-after : auto;
    page-break-before : auto;
    page-break-inside : auto;
    perspective : none;
    perspective-origin : 50% 50%;
    position : static;
    /* May need to alter quotes for different locales (e.g fr) */
    quotes : '\201C' '\201D' '\2018' '\2019';
    right : auto;
    tab-size : 8;
    table-layout : auto;
    text-align : inherit;
    text-align-last : auto;
    text-decoration : none;
    text-decoration-color : inherit;
    text-decoration-line : none;
    text-decoration-style : solid;
    text-indent : 0;
    text-shadow : none;
    text-transform : none;
    top : auto;
    transform : none;
    transform-style : flat;
    transition : none;
    transition-delay : 0s;
    transition-duration : 0s;
    transition-property : none;
    transition-timing-function : ease;
    unicode-bidi : normal;
    vertical-align : baseline;
    visibility : visible;
    white-space : normal;
    widows : 0;
    width : auto;
    word-spacing : normal;
    z-index : auto;
    /* basic modern patch */
    all: initial;
    all: unset;
}